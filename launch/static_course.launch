<launch>
  <arg name="gui" default="true"/>

  <param name="robot_description" 
         textfile="$(find auto_nav)/model/iris_with_depth_cam_urdf/model.urdf" /> 
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find auto_nav)/gazebo_models_worlds_collection-master/worlds/barrels.world"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="verbose" value="true"/>
  </include>
  
  <!-- <node name="spawn_drone" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        output="screen" 
        args="-urdf -param robot_description -model iris_with_depth_cam -x 0 -y 0 -z 0" /> -->
  
  <node name="spawn_drone" pkg="gazebo_ros" type="spawn_model"
        args="-sdf -file $(find auto_nav)/model/iris_with_depth_cam_urdf/model.sdf -model iris_with_depth_cam"
        output="screen" />
   
  <node pkg="robot_state_publisher" type="robot_state_publisher" 
          name="robot_state_publisher">
  </node>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>

  <!-- <node pkg="robot_localization" type="ekf_localization_node" name="ekf_map">
    <param name="map_frame" value="map"/>
    <param name="odom_frame" value="odom"/>
    <param name="base_link_frame" value="dummy_link"/>
    <param name="world_frame" value="map"/>
    <rosparam param="process_noise_covariance">[1e-5,0,0,0,0,0, ...]</rosparam>
  </node> -->

  <!-- <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <rosparam command="load" file="$(find auto_nav)/config/ekf.yaml"/>
  </node> -->
  
</launch>
